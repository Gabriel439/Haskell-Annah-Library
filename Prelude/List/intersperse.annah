let intersperse (a : *) (x : a) (xs : ../List a) : ../List a =
    ./uncons a xs
    (../List a)
    [nil a]
    (\(p : ../Prod2 a (../List a)) ->
        p
        (../List a)
        (\(head : a) -> \(tail : ../List a) ->
            ./Cons
            a
            head
            (./Monad a (do ../List {
                y : a <- tail;
                _ : a <- [nil a, x, y]; }))
        )
    )
in  intersperse
