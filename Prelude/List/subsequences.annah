let subsequences (a : *) (xs : ../List a) : ../List (../List a) =
    xs
    (../List (../List a))
    (\(x : a) -> \(yss : ../List (../List a)) ->
        ./Monad (../List a) (do ../List {
            ys2 : ../List a <- yss;
            ys1 : ../List a <- [nil (../List a), [nil a], [nil a, x]];
            _   : ../List a <- ./pure (../List a) (./(++) a ys1 ys2); })
    )
    [nil (../List a), [nil a]]
in  subsequences
