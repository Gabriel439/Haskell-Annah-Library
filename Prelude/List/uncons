λ(a : *) → λ(xs : ../List  a) → xs (../Maybe  (../Prod2  a (../List  a))) (λ(y : a) → λ(r : ../Maybe  (../Prod2  a (../List  a))) → r (../Maybe  (../Prod2  a (../List  a))) (../Maybe/Just  (../Prod2  a (../List  a)) (../Prod2/Make  a (../List  a) y (λ(List : *) → λ(Cons : ∀(head : a) → ∀(tail : List) → List) → λ(Nil : List) → Nil))) (λ(p : ../Prod2  a (../List  a)) → p (../Maybe  (../Prod2  a (../List  a))) (λ(z : a) → λ(zs : ../List  a) → ../Maybe/Just  (../Prod2  a (../List  a)) (../Prod2/Make  a (../List  a) y (./Cons  a z zs))))) (../Maybe/Nothing  (../Prod2  a (../List  a)))
