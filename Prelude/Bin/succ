λ(bin : #Bin ) → bin #Bin  (#Bin/One  #Bin/Nil_ ) (λ(bin_ : #Bin/Bin_ ) → bin_ (∀(S1 : *) → ∀(MkS1 : #Bool  → #Bin/Bin_  → S1) → S1) (λ(S1 : *) → λ(MkS1 : #Bool  → #Bin/Bin_  → S1) → MkS1 #Bool/True  #Bin/Nil_ ) (λ(t : ∀(S1 : *) → ∀(MkS1 : #Bool  → #Bin/Bin_  → S1) → S1) → t (∀(S1 : *) → ∀(MkS1 : #Bool  → #Bin/Bin_  → S1) → S1) (λ(b : #Bool ) → λ(bin_ : #Bin/Bin_ ) → b (∀(S1 : *) → ∀(MkS1 : #Bool  → #Bin/Bin_  → S1) → S1) (λ(S1 : *) → λ(MkS1 : #Bool  → #Bin/Bin_  → S1) → MkS1 #Bool/False  (#Bin/One_  bin_)) (λ(S1 : *) → λ(MkS1 : #Bool  → #Bin/Bin_  → S1) → MkS1 #Bool/False  (#Bin/Zero_  bin_)))) (λ(t : ∀(S1 : *) → ∀(MkS1 : #Bool  → #Bin/Bin_  → S1) → S1) → t (∀(S1 : *) → ∀(MkS1 : #Bool  → #Bin/Bin_  → S1) → S1) (λ(b : #Bool ) → λ(bin_ : #Bin/Bin_ ) → b (∀(S1 : *) → ∀(MkS1 : #Bool  → #Bin/Bin_  → S1) → S1) (λ(S1 : *) → λ(MkS1 : #Bool  → #Bin/Bin_  → S1) → MkS1 #Bool/True  (#Bin/Zero_  bin_)) (λ(S1 : *) → λ(MkS1 : #Bool  → #Bin/Bin_  → S1) → MkS1 #Bool/False  (#Bin/One_  bin_)))) #Bin  (λ(b : #Bool ) → λ(bin_ : #Bin/Bin_ ) → b #Bin  (#Bin/One  (#Bin/Zero_  bin_)) (#Bin/One  bin_)))
