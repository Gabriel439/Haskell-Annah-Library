(λ(S1 : *) → λ(MkS1 : #Bool  → #Bin/Bin_  → S1) → λ(foldS1 : ∀(x : S1) → ∀(S1 : *) → ∀(MkS1 : #Bool  → #Bin/Bin_  → S1) → S1) → (λ(Succ : ∀(bin : #Bin ) → #Bin ) → Succ) (λ(bin : #Bin ) → bin #Bin  (#Bin/One  #Bin/Nil_ ) (λ(bin_ : #Bin/Bin_ ) → (λ(x : S1) → foldS1 x #Bin  (λ(b : #Bool ) → λ(bin_ : #Bin/Bin_ ) → b #Bin  (#Bin/One  (#Bin/Zero_  bin_)) (#Bin/One  bin_))) (bin_ S1 (MkS1 #Bool/True  #Bin/Nil_ ) (λ(t : S1) → foldS1 t S1 (λ(b : #Bool ) → λ(bin_ : #Bin/Bin_ ) → b S1 (MkS1 #Bool/False  (#Bin/One_  bin_)) (MkS1 #Bool/False  (#Bin/Zero_  bin_)))) (λ(t : S1) → foldS1 t S1 (λ(b : #Bool ) → λ(bin_ : #Bin/Bin_ ) → b S1 (MkS1 #Bool/True  (#Bin/Zero_  bin_)) (MkS1 #Bool/False  (#Bin/One_  bin_)))))))) (∀(S1 : *) → ∀(MkS1 : #Bool  → #Bin/Bin_  → S1) → S1) (λ(_ : #Bool ) → λ(_ : #Bin/Bin_ ) → λ(S1 : *) → λ(MkS1 : #Bool  → #Bin/Bin_  → S1) → MkS1 _@1 _) (λ(x : ∀(S1 : *) → ∀(MkS1 : #Bool  → #Bin/Bin_  → S1) → S1) → x)
