λ(b1 : #Bin ) → λ(b2 : #Bin ) → b1 #Bin  b2 (λ(n : #Bin/Bin_ ) → n (∀(S2 : *) → ∀(MkS2 : #Bin  → #Bin/Bin_  → S2) → S2) (λ(S2 : *) → λ(MkS2 : #Bin  → #Bin/Bin_  → S2) → MkS2 b2 #Bin/Nil_ ) (λ(t : ∀(S2 : *) → ∀(MkS2 : #Bin  → #Bin/Bin_  → S2) → S2) → t (∀(S2 : *) → ∀(MkS2 : #Bin  → #Bin/Bin_  → S2) → S2) (λ(carry : #Bin ) → λ(accum : #Bin/Bin_ ) → carry (∀(Unsnoc : *) → ∀(Empty : Unsnoc) → ∀(NonEmpty : #Bin  → #Bool  → Unsnoc) → Unsnoc) (λ(Unsnoc : *) → λ(Empty : Unsnoc) → λ(NonEmpty : #Bin  → #Bool  → Unsnoc) → Empty) (λ(n : #Bin/Bin_ ) → n (∀(Unsnoc_ : *) → ∀(Empty_ : Unsnoc_) → ∀(NonEmpty_ : #Bin/Bin_  → #Bool  → Unsnoc_) → Unsnoc_) (λ(Unsnoc_ : *) → λ(Empty_ : Unsnoc_) → λ(NonEmpty_ : #Bin/Bin_  → #Bool  → Unsnoc_) → Empty_) (λ(m : ∀(Unsnoc_ : *) → ∀(Empty_ : Unsnoc_) → ∀(NonEmpty_ : #Bin/Bin_  → #Bool  → Unsnoc_) → Unsnoc_) → m (∀(Unsnoc_ : *) → ∀(Empty_ : Unsnoc_) → ∀(NonEmpty_ : #Bin/Bin_  → #Bool  → Unsnoc_) → Unsnoc_) (λ(Unsnoc_ : *) → λ(Empty_ : Unsnoc_) → λ(NonEmpty_ : #Bin/Bin_  → #Bool  → Unsnoc_) → NonEmpty_ #Bin/Nil_  #Bool/False ) (λ(n : #Bin/Bin_ ) → λ(_ : #Bool ) → λ(Unsnoc_ : *) → λ(Empty_ : Unsnoc_) → λ(NonEmpty_ : #Bin/Bin_  → #Bool  → Unsnoc_) → NonEmpty_ (#Bin/Zero_  n) _)) (λ(m : ∀(Unsnoc_ : *) → ∀(Empty_ : Unsnoc_) → ∀(NonEmpty_ : #Bin/Bin_  → #Bool  → Unsnoc_) → Unsnoc_) → m (∀(Unsnoc_ : *) → ∀(Empty_ : Unsnoc_) → ∀(NonEmpty_ : #Bin/Bin_  → #Bool  → Unsnoc_) → Unsnoc_) (λ(Unsnoc_ : *) → λ(Empty_ : Unsnoc_) → λ(NonEmpty_ : #Bin/Bin_  → #Bool  → Unsnoc_) → NonEmpty_ #Bin/Nil_  #Bool/True ) (λ(n : #Bin/Bin_ ) → λ(_ : #Bool ) → λ(Unsnoc_ : *) → λ(Empty_ : Unsnoc_) → λ(NonEmpty_ : #Bin/Bin_  → #Bool  → Unsnoc_) → NonEmpty_ (#Bin/One_  n) _)) (∀(Unsnoc : *) → ∀(Empty : Unsnoc) → ∀(NonEmpty : #Bin  → #Bool  → Unsnoc) → Unsnoc) (λ(Unsnoc : *) → λ(Empty : Unsnoc) → λ(NonEmpty : #Bin  → #Bool  → Unsnoc) → NonEmpty #Bin/Zero  #Bool/True ) (λ(n : #Bin/Bin_ ) → λ(_ : #Bool ) → λ(Unsnoc : *) → λ(Empty : Unsnoc) → λ(NonEmpty : #Bin  → #Bool  → Unsnoc) → NonEmpty (#Bin/One  n) _)) (∀(S2 : *) → ∀(MkS2 : #Bin  → #Bin/Bin_  → S2) → S2) (λ(S2 : *) → λ(MkS2 : #Bin  → #Bin/Bin_  → S2) → MkS2 #Bin/Zero  (#Bin/Zero_  accum)) (λ(bin : #Bin ) → λ(b : #Bool ) → b (∀(S2 : *) → ∀(MkS2 : #Bin  → #Bin/Bin_  → S2) → S2) (λ(S2 : *) → λ(MkS2 : #Bin  → #Bin/Bin_  → S2) → MkS2 bin (#Bin/One_  accum)) (λ(S2 : *) → λ(MkS2 : #Bin  → #Bin/Bin_  → S2) → MkS2 bin (#Bin/Zero_  accum))))) (λ(t : ∀(S2 : *) → ∀(MkS2 : #Bin  → #Bin/Bin_  → S2) → S2) → t (∀(S2 : *) → ∀(MkS2 : #Bin  → #Bin/Bin_  → S2) → S2) (λ(carry : #Bin ) → λ(accum : #Bin/Bin_ ) → carry (∀(Unsnoc : *) → ∀(Empty : Unsnoc) → ∀(NonEmpty : #Bin  → #Bool  → Unsnoc) → Unsnoc) (λ(Unsnoc : *) → λ(Empty : Unsnoc) → λ(NonEmpty : #Bin  → #Bool  → Unsnoc) → Empty) (λ(n : #Bin/Bin_ ) → n (∀(Unsnoc_ : *) → ∀(Empty_ : Unsnoc_) → ∀(NonEmpty_ : #Bin/Bin_  → #Bool  → Unsnoc_) → Unsnoc_) (λ(Unsnoc_ : *) → λ(Empty_ : Unsnoc_) → λ(NonEmpty_ : #Bin/Bin_  → #Bool  → Unsnoc_) → Empty_) (λ(m : ∀(Unsnoc_ : *) → ∀(Empty_ : Unsnoc_) → ∀(NonEmpty_ : #Bin/Bin_  → #Bool  → Unsnoc_) → Unsnoc_) → m (∀(Unsnoc_ : *) → ∀(Empty_ : Unsnoc_) → ∀(NonEmpty_ : #Bin/Bin_  → #Bool  → Unsnoc_) → Unsnoc_) (λ(Unsnoc_ : *) → λ(Empty_ : Unsnoc_) → λ(NonEmpty_ : #Bin/Bin_  → #Bool  → Unsnoc_) → NonEmpty_ #Bin/Nil_  #Bool/False ) (λ(n : #Bin/Bin_ ) → λ(_ : #Bool ) → λ(Unsnoc_ : *) → λ(Empty_ : Unsnoc_) → λ(NonEmpty_ : #Bin/Bin_  → #Bool  → Unsnoc_) → NonEmpty_ (#Bin/Zero_  n) _)) (λ(m : ∀(Unsnoc_ : *) → ∀(Empty_ : Unsnoc_) → ∀(NonEmpty_ : #Bin/Bin_  → #Bool  → Unsnoc_) → Unsnoc_) → m (∀(Unsnoc_ : *) → ∀(Empty_ : Unsnoc_) → ∀(NonEmpty_ : #Bin/Bin_  → #Bool  → Unsnoc_) → Unsnoc_) (λ(Unsnoc_ : *) → λ(Empty_ : Unsnoc_) → λ(NonEmpty_ : #Bin/Bin_  → #Bool  → Unsnoc_) → NonEmpty_ #Bin/Nil_  #Bool/True ) (λ(n : #Bin/Bin_ ) → λ(_ : #Bool ) → λ(Unsnoc_ : *) → λ(Empty_ : Unsnoc_) → λ(NonEmpty_ : #Bin/Bin_  → #Bool  → Unsnoc_) → NonEmpty_ (#Bin/One_  n) _)) (∀(Unsnoc : *) → ∀(Empty : Unsnoc) → ∀(NonEmpty : #Bin  → #Bool  → Unsnoc) → Unsnoc) (λ(Unsnoc : *) → λ(Empty : Unsnoc) → λ(NonEmpty : #Bin  → #Bool  → Unsnoc) → NonEmpty #Bin/Zero  #Bool/True ) (λ(n : #Bin/Bin_ ) → λ(_ : #Bool ) → λ(Unsnoc : *) → λ(Empty : Unsnoc) → λ(NonEmpty : #Bin  → #Bool  → Unsnoc) → NonEmpty (#Bin/One  n) _)) (∀(S2 : *) → ∀(MkS2 : #Bin  → #Bin/Bin_  → S2) → S2) (λ(S2 : *) → λ(MkS2 : #Bin  → #Bin/Bin_  → S2) → MkS2 #Bin/Zero  (#Bin/One_  accum)) (λ(bin : #Bin ) → λ(b : #Bool ) → b (∀(S2 : *) → ∀(MkS2 : #Bin  → #Bin/Bin_  → S2) → S2) (λ(S2 : *) → λ(MkS2 : #Bin  → #Bin/Bin_  → S2) → MkS2 (#Bin/One  (bin #Bin/Bin_  #Bin/Nil_  (λ(bin_ : #Bin/Bin_ ) → bin_ (∀(S1 : *) → ∀(MkS1 : ∀(carry : #Bool ) → ∀(bits : #Bin/Bin_ ) → S1) → S1) (λ(S1 : *) → λ(MkS1 : ∀(carry : #Bool ) → ∀(bits : #Bin/Bin_ ) → S1) → MkS1 #Bool/True  #Bin/Nil_ ) (λ(t : ∀(S1 : *) → ∀(MkS1 : ∀(carry : #Bool ) → ∀(bits : #Bin/Bin_ ) → S1) → S1) → t (∀(S1 : *) → ∀(MkS1 : ∀(carry : #Bool ) → ∀(bits : #Bin/Bin_ ) → S1) → S1) (λ(carry : #Bool ) → λ(bits : #Bin/Bin_ ) → carry (∀(S1 : *) → ∀(MkS1 : ∀(carry : #Bool ) → ∀(bits : #Bin/Bin_ ) → S1) → S1) (λ(S1 : *) → λ(MkS1 : ∀(carry : #Bool ) → ∀(bits : #Bin/Bin_ ) → S1) → MkS1 #Bool/False  (#Bin/One_  bits)) (λ(S1 : *) → λ(MkS1 : ∀(carry : #Bool ) → ∀(bits : #Bin/Bin_ ) → S1) → MkS1 #Bool/False  (#Bin/Zero_  bits)))) (λ(t : ∀(S1 : *) → ∀(MkS1 : ∀(carry : #Bool ) → ∀(bits : #Bin/Bin_ ) → S1) → S1) → t (∀(S1 : *) → ∀(MkS1 : ∀(carry : #Bool ) → ∀(bits : #Bin/Bin_ ) → S1) → S1) (λ(carry : #Bool ) → λ(bits : #Bin/Bin_ ) → carry (∀(S1 : *) → ∀(MkS1 : ∀(carry : #Bool ) → ∀(bits : #Bin/Bin_ ) → S1) → S1) (λ(S1 : *) → λ(MkS1 : ∀(carry : #Bool ) → ∀(bits : #Bin/Bin_ ) → S1) → MkS1 #Bool/True  (#Bin/Zero_  bits)) (λ(S1 : *) → λ(MkS1 : ∀(carry : #Bool ) → ∀(bits : #Bin/Bin_ ) → S1) → MkS1 #Bool/False  (#Bin/One_  bits)))) #Bin/Bin_  (λ(carry : #Bool ) → λ(bits : #Bin/Bin_ ) → carry #Bin/Bin_  (#Bin/Zero_  bits) bits)))) (#Bin/Zero_  accum)) (λ(S2 : *) → λ(MkS2 : #Bin  → #Bin/Bin_  → S2) → MkS2 bin (#Bin/One_  accum))))) #Bin  (λ(carry : #Bin ) → λ(accum : #Bin/Bin_ ) → #Bin/One  (carry #Bin/Bin_  #Bin/Nil_  (λ(bin_ : #Bin/Bin_ ) → bin_ (∀(S1 : *) → ∀(MkS1 : ∀(carry : #Bool ) → ∀(bits : #Bin/Bin_ ) → S1) → S1) (λ(S1 : *) → λ(MkS1 : ∀(carry : #Bool ) → ∀(bits : #Bin/Bin_ ) → S1) → MkS1 #Bool/True  #Bin/Nil_ ) (λ(t : ∀(S1 : *) → ∀(MkS1 : ∀(carry : #Bool ) → ∀(bits : #Bin/Bin_ ) → S1) → S1) → t (∀(S1 : *) → ∀(MkS1 : ∀(carry : #Bool ) → ∀(bits : #Bin/Bin_ ) → S1) → S1) (λ(carry : #Bool ) → λ(bits : #Bin/Bin_ ) → carry (∀(S1 : *) → ∀(MkS1 : ∀(carry : #Bool ) → ∀(bits : #Bin/Bin_ ) → S1) → S1) (λ(S1 : *) → λ(MkS1 : ∀(carry : #Bool ) → ∀(bits : #Bin/Bin_ ) → S1) → MkS1 #Bool/False  (#Bin/One_  bits)) (λ(S1 : *) → λ(MkS1 : ∀(carry : #Bool ) → ∀(bits : #Bin/Bin_ ) → S1) → MkS1 #Bool/False  (#Bin/Zero_  bits)))) (λ(t : ∀(S1 : *) → ∀(MkS1 : ∀(carry : #Bool ) → ∀(bits : #Bin/Bin_ ) → S1) → S1) → t (∀(S1 : *) → ∀(MkS1 : ∀(carry : #Bool ) → ∀(bits : #Bin/Bin_ ) → S1) → S1) (λ(carry : #Bool ) → λ(bits : #Bin/Bin_ ) → carry (∀(S1 : *) → ∀(MkS1 : ∀(carry : #Bool ) → ∀(bits : #Bin/Bin_ ) → S1) → S1) (λ(S1 : *) → λ(MkS1 : ∀(carry : #Bool ) → ∀(bits : #Bin/Bin_ ) → S1) → MkS1 #Bool/True  (#Bin/Zero_  bits)) (λ(S1 : *) → λ(MkS1 : ∀(carry : #Bool ) → ∀(bits : #Bin/Bin_ ) → S1) → MkS1 #Bool/False  (#Bin/One_  bits)))) #Bin/Bin_  (λ(carry : #Bool ) → λ(bits : #Bin/Bin_ ) → carry #Bin/Bin_  (#Bin/Zero_  bits) bits)) #Bin/Bin_  accum #Bin/Zero_  #Bin/One_ )))
