let Functor : #Functor #IO =
    \(b : *)
->  \(d : #Defer #IO b)
->  d
    (#IO b)
    (   \(a : *)
    ->  \(k : a -> b)
    ->  \(x : #IO a)
    ->  \(IO   : *)
    ->  \(Get_ : (#Message -> IO) -> IO)
    ->  \(Put_ : #Message -> IO -> IO)
    ->  \(Pure : b -> IO)
    ->  x IO Get_ Put_ (\(r : a) -> Pure (k r))
    )
in  Functor
