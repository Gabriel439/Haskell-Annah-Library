given a : *

type IO

data Get_ (#Message -> IO)
data Put_ #Message IO
data Pure_ a

fold foldIO

in

let (>>=) (a : *) (b : *) (m : IO a) (f : a -> IO b) : IO b =
    foldIO
        a
        m
        (IO b)
        (Get_ b)
        (Put_ b)
        (\(r : a) ->
            foldIO
                b
                (f r)
                (IO b)
                (Get_ b)
                (Put_ b)
                (Pure_ b)
        )

in (>>=)
